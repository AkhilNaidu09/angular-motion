{"version":3,"sources":["scripts/docs.js","scripts/app.js","scripts/services/angular-plunkr.js","scripts/services/indent.js","scripts/controllers/main.js","scripts/directives/append-source.js","scripts/directives/code.js","scripts/directives/highlight-block.js"],"names":["contentHtmlUrlPrefix","undefined","angular","module","constant","config","$plunkrProvider","version","defaults","$locationProvider","$sceProvider","enabled","$compileProvider","debugInfoEnabled","$popoverProvider","html","$routeProvider","html5Mode","extend","$tooltipProvider","$asideProvider","$modalProvider","container","$rootScope","bodyElement","element","on","el","run","hash","$window","$location","$anchorScroll","length","evt","which","document","body","substr","target","setTimeout","attr","$templateCache","templateJs","provider","this","put","templateCss","$form","forEach","fields","$get","value","form","append","input","plunkrTags","bodyEl","submit","remove","name","preload","plunkrTitle","templateHtml","contentHtml","contentHtmlUrl","contentCss","contentCssUrl","contentJs","contentJsUrl","PlunkrFactory","$plunkr","options","scope","$isReady","$promise","deferred","promise","postData","description","index","$q","defer","private","load","tag","key","resolve","results","replace","when","template","$http","get","result","isString","isArray","isObject","data","then","open","post","moduleName","init","debounce","restrict","compile","directive","postLink","transclusion","isDefined","tAttr","$set","plunkr","onClickHandler","plunkerIsReady","$apply","$on","previousTitle","title","off","destroy","text","minIndent","spaces","i","lines","line","prefix","indent","match","pop","push","join","$scope","$scrollTo","createPlunkr","controller","tooltip","aside","popover","modal","panels","placement","hlElement","codeElement","elementHtml","hlClass","children","addClass","terminal","hljs","highlightBlock","window"],"mappings":"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","file":"scripts/docs.min.js","sourcesContent":["(function(window, document, undefined) {\n'use strict';\n\n// Source: scripts/app.js\nangular.module('mgcrea.ngMotionDocs', [\n  'mgcrea.ngStrap',\n  'mgcrea.ngPlunkr',\n  'ngRoute',\n  'ngAnimate'\n])\n\n.constant('version', 'v0.4.1')\n\n.config(function($plunkrProvider, version) {\n\n  angular.extend($plunkrProvider.defaults, {\n    plunkrTitle: 'AngularMotion Example Plunkr',\n    plunkrTags: ['angular', 'angular-motion', 'angular-strap'],\n    plunkrPrivate: false,\n    contentHtmlUrlPrefix: 'https://rawgithub.com/mgcrea/angular-strap/' + version + '/src/',\n    contentJsUrlPrefix: 'https://rawgithub.com/mgcrea/angular-strap/' + version + '/src/'\n  });\n\n})\n\n.config(function($routeProvider, $compileProvider, $locationProvider, $sceProvider) {\n\n  // Configure html5 to get links working on jsfiddle\n  $locationProvider.html5Mode(false);\n\n  // Disable strict context\n  $sceProvider.enabled(false);\n\n  // Disable scope debug data\n  $compileProvider.debugInfoEnabled(false);\n\n})\n\n.config(function($popoverProvider, $tooltipProvider, $asideProvider, $modalProvider) {\n\n  angular.extend($popoverProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n  angular.extend($tooltipProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n  angular.extend($modalProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n  angular.extend($asideProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n\n})\n\n.run(function($window, $rootScope, $location, $anchorScroll, version) {\n\n  $rootScope.version = version;\n\n  // FastClick\n  $window.FastClick.attach($window.document.body);\n\n  // Support simple anchor id scrolling\n  var bodyElement = angular.element($window.document.body);\n  bodyElement.on('click', function(evt) {\n    var el = angular.element(evt.target);\n    var hash = el.attr('href');\n    if(!hash || hash[0] !== '#') return;\n    if(hash.length > 1 && hash[1] === '/') return;\n    if(evt.which !== 1) return;\n    $location.hash(hash.substr(1));\n    $anchorScroll();\n  });\n\n  // Initial $anchorScroll()\n  setTimeout(function() {\n    $anchorScroll();\n  }, 0);\n\n});\n\n// Source: scripts/services/angular-plunkr.js\nangular.module('mgcrea.ngPlunkr', ['mgcrea.ngStrap.helpers.debounce'])\n\n.run(function($templateCache, version) {\n\n  var ngVersion = '1.3.8';\n\n  var templateHtml = '' +\n    '<!DOCTYPE html>\\n' +\n    '<html ng-app=\"{{ moduleName }}\">\\n' +\n    '\\n' +\n    '  <head>\\n' +\n    '    <meta charset=\"utf-8\" />\\n' +\n    '    <title>AngularJS Plunker</title>\\n' +\n    '    <script>document.write(\\'<base href=\"\\' + document.location + \\'\" />\\');</script>\\n' +\n    '    <link rel=\"stylesheet\" href=\"style.css\" />\\n' +\n\n    '    <link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/static/styles/angular-motion.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/static/styles/bootstrap-additions.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/styles/libraries.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/styles/main.min.css\">\\n' +\n\n    '    <script src=\"//code.angularjs.org/' + ngVersion + '/angular.min.js\" data-semver=\"' + ngVersion + '\"></script>\\n' +\n    '    <script src=\"//code.angularjs.org/' + ngVersion + '/angular-animate.min.js\" data-semver=\"' + ngVersion + '\"></script>\\n' +\n    '    <script src=\"//code.angularjs.org/' + ngVersion + '/angular-sanitize.min.js\" data-semver=\"' + ngVersion + '\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/dist/angular-strap.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/dist/angular-strap.tpl.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '    <script src=\"app.js\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/scripts/docs.tpl.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/scripts/demo.tpl.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '  </head>\\n' +\n    '\\n' +\n    '  <body ng-controller=\"MainCtrl\">\\n' +\n    '\\n{{ contentHtml }}\\n' +\n    '  </body>\\n' +\n    '\\n' +\n    '</html>\\n';\n\n  $templateCache.put('$plunkr-html', templateHtml);\n\n  var templateCss = '' +\n    '/* Put your css in here */\\n' +\n    '\\n{{ contentCss }}\\n';\n\n  $templateCache.put('$plunkr-css', templateCss);\n\n  var templateJs = '' +\n    'var app = angular.module(\\'{{ moduleName }}\\', [\\'ngAnimate\\', \\'ngSanitize\\', \\'mgcrea.ngStrap\\']);\\n' +\n    '\\n' +\n    'app.controller(\\'MainCtrl\\', function($scope) {\\n' +\n    '});\\n' +\n    '\\n{{ contentJs }}\\n';\n\n  $templateCache.put('$plunkr-js', templateJs);\n\n})\n\n.provider('$form', function() {\n\n  var defaults = {};\n\n  this.$get = function($window) {\n\n    var bodyEl = angular.element($window.document.body);\n\n    var $form = {};\n\n    $form.post = function(url, fields) {\n      var form = angular.element('<form style=\"display: none;\" method=\"post\" action=\"' + url + '\" target=\"_blank\"></form>');\n      angular.forEach(fields, function(value, name) {\n        var input = angular.element('<input type=\"hidden\" name=\"' +  name + '\">');\n        input.attr('value', value);\n        form.append(input);\n      });\n      bodyEl.append(form);\n      form[0].submit();\n      form.remove();\n    };\n\n    return $form;\n\n  };\n\n})\n\n.provider('$plunkr', function() {\n\n  var defaults = this.defaults = {\n    preload: false,\n    plunkrTitle: 'AngularJS Example Plunkr',\n    plunkrPrivate: true,\n    plunkrTags: ['angular'],\n    moduleName: 'plunker',\n    templateHtml: '$plunkr-html',\n    contentHtml: '    <p>Hello {{name}}!</p>\\n',\n    contentHtmlUrl: '',\n    templateCss: '$plunkr-css',\n    contentCss: 'body {\\n  padding: 40px !important;\\n}\\n',\n    contentCssUrl: '',\n    templateJs: '$plunkr-js',\n    contentJs: '  $scope.name = \\'World\\';\\n',\n    contentJsUrl: ''\n  };\n\n  this.$get = function($rootScope, $compile, $templateCache, $q, $http, $form) {\n\n    function PlunkrFactory(config) {\n\n      var $plunkr = {};\n\n      // Common vars\n      var options = angular.extend({}, defaults, config);\n      var scope = $plunkr.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n      $plunkr.$isReady = false;\n\n      // Private vars\n\n      var deferred = $q.defer();\n      $plunkr.$promise = deferred.promise;\n      var postData = {};\n\n      $plunkr.init = function() {\n\n        postData.description = options.plunkrTitle;\n        angular.forEach(options.plunkrTags, function(tag, index) {\n          postData['tags[' + index + ']'] = tag;\n        });\n        postData.private = options.plunkrPrivate;\n        if(options.preload) {\n          $plunkr.load();\n        }\n\n      };\n\n      $plunkr.load = function() {\n        deferred.resolve($q.all(['templateHtml', 'contentHtmlUrl', 'templateCss', 'contentCssUrl', 'templateJs', 'contentJsUrl'].map(function(key) {\n          var template = options[key + 'Prefix'] ? options[key + 'Prefix'] + options[key] : options[key];\n          return options[key] && $q.when($templateCache.get(template) || $http.get(template));\n        })).then(function(results) {\n          return results.map(function(result) {\n            if(angular.isString(result)) return result;\n            else if(angular.isArray(result)) return result[1];\n            else if(angular.isObject(result)) return result.data;\n            else return result;\n          });\n        }).then(function(results) {\n          postData['files[index.html]'] = results[0].replace(/{{ contentHtml }}/i, results[1] || options.contentHtml).replace(/{{ moduleName }}/i, options.moduleName);\n          postData['files[style.css]'] = results[2].replace(/{{ contentCss }}/i, results[3] || options.contentCss).replace(/{{ moduleName }}/i, options.moduleName);\n          postData['files[app.js]'] = results[4].replace(/{{ contentJs }}/i, results[5] || options.contentJs).replace(/{{ moduleName }}/i, options.moduleName);\n          $plunkr.$isReady = true;\n        }));\n        return $plunkr.$promise;\n      };\n\n      $plunkr.open = function(load) {\n        if(!$plunkr.$isReady) $plunkr.load();\n        else $form.post('http://plnkr.co/edit/?p=preview', postData);\n      };\n\n      $plunkr.init();\n      return $plunkr;\n\n    }\n\n    return PlunkrFactory;\n\n  };\n\n})\n\n.directive('ngPlunkr', function($plunkr, debounce) {\n\n  return {\n    restrict: 'EAC',\n    scope: true,\n    // priority: 10000,\n    template: '<i class=\"fa fa-edit\"></i><small>plunker</small>',\n    compile: function(tElement, tAttr) {\n\n      // tElement.attr('data-title', 'edit in plunker');\n      // tElement.attr('data-placement', 'right');\n      // tElement.attr('bs-tooltip', '');\n\n      tAttr.$set('title', 'edit in plunker');\n\n      return function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['moduleName', 'templateHtml', 'templateJs', 'templateCss', 'contentHtmlUrl', 'contentJsUrl', 'contentCssUrl'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Initialize plnkr\n        var plunkr = $plunkr(options);\n\n        var previousTitle = attr.title;\n        function onClickHandler() {\n          if(!plunkr.$isReady) {\n            attr.$set('title', '<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;preparing plunker...');\n            plunkr.load();\n          } else {\n            plunkr.open();\n          }\n        }\n\n        function plunkerIsReady() {\n          scope.$apply(function() {\n            attr.$set('title', '<i class=\"fa fa-check\"></i>&nbsp;punker ready, click again!');\n          });\n        }\n\n        plunkr.$promise.then(debounce(plunkerIsReady, 400));\n\n        // Trigger\n        element.on('click', onClickHandler);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          attr.$set('title', previousTitle);\n          element.off('click', onClickHandler);\n          plunkr.destroy();\n          options = null;\n          plunkr = null;\n        });\n\n      };\n    }\n  };\n});\n\n\n/*\nfunction(templateMerge, formPostData, prepareEditorAssetTags, prepareDefaultAppModule) {\n  return function(content) {\n    var hasRouting = false;\n    angular.forEach(content.deps, function(file) {\n      hasRouting = hasRouting || file.name == 'angular-route.js';\n    });\n    var indexHtmlContent = '<!doctype html>\\n' +\n                           '<html ng-app=\"{{module}}\">\\n' +\n                           '  <head>\\n' +\n                           '{{scriptDeps}}';\n\n    if(hasRouting) {\n        indexHtmlContent += '<script type=\"text/javascript\">\\n' +\n                            '//this is here to make plunkr work with AngularJS routing\\n' +\n                            'angular.element(document.getElementsByTagName(\\'head\\')).append(' +\n                              'angular.element(\\'<base href=\"\\' + window.location.pathname + \\'\" />\\')' +\n                            ');\\n' +\n                            '</script>\\n';\n    }\n\n    indexHtmlContent += '</head>\\n' +\n                        '  <body>\\n\\n' +\n                        '{{indexContents}}\\n\\n' +\n                        '  </body>\\n' +\n                        '</html>\\n';\n\n    indexProp = {\n      module: content.module,\n      scriptDeps: prepareEditorAssetTags(content, { includeLocalFiles : true }),\n      indexContents: content.html[0].content\n    };\n\n    var allFiles = [].concat(content.js, content.css, content.html, content.json);\n\n    if(!content.module) {\n      var moduleData = prepareDefaultAppModule(content);\n      indexProp.module = moduleData.module;\n\n      var found = false;\n      angular.forEach(content.js, function(file) {\n        if(file.name == 'script.js') {\n          file.content = moduleData.script + file.content;\n          found = true;\n        }\n      });\n      if(!found) {\n        indexProp.scriptDeps += '<script type=\"text/javascript\" src=\"script.js\"></script>\\n';\n        allFiles.push({\n          name : 'script.js',\n          content : moduleData.script\n        });\n      }\n    };\n\n    var postData = {};\n\n    angular.forEach(allFiles, function(file, index) {\n      if (file.content && file.name != 'index.html') {\n        postData['files[' + file.name + ']'] = file.content;\n      }\n    });\n\n    postData['files[index.html]'] = templateMerge(indexHtmlContent, indexProp);\n    postData['tags[]'] = \"angularjs\";\n\n    postData.private = true;\n    postData.description = 'AngularJS Example Plunkr';\n\n    formPostData('http://plnkr.co/edit/?p=preview', postData);\n  };\n};*/\n\n// Source: scripts/services/indent.js\nangular.module('mgcrea.ngMotionDocs')\n\n.value('indent', function(text, spaces) {\n\n  if(!text) return text;\n  var lines = text.split(/\\r?\\n/);\n  var prefix = '      '.substr(0, spaces || 0);\n  var i;\n\n  // Remove any leading blank lines\n  while(lines.length && lines[0].match(/^\\s*$/)) lines.shift();\n  // Remove any trailing blank lines\n  while(lines.length && lines[lines.length - 1].match(/^\\s*$/)) lines.pop();\n  // Calculate proper indent\n  var minIndent = 999;\n  for(i = 0; i < lines.length; i++) {\n    var line = lines[0];\n    var indent = line.match(/^\\s*/)[0];\n    if(indent !== line && indent.length < minIndent) {\n      minIndent = indent.length;\n    }\n  }\n\n  for(i = 0; i < lines.length; i++) {\n    lines[i] = prefix + lines[i].substring(minIndent).replace(/=\"\"/g, '');\n  }\n  lines.push('');\n  return lines.join('\\n');\n\n});\n\n// Source: scripts/controllers/main.js\nangular.module('mgcrea.ngMotionDocs')\n\n.controller('MainCtrl', function ($scope, $rootScope, $location, $anchorScroll, $plunkr) {\n\n  $scope.$scrollTo = function(hash) {\n    $location.hash(hash);\n    $anchorScroll();\n  };\n\n  $scope.createPlunkr = function() {\n    var myPlunkr = $plunkr();\n  };\n\n  $scope.tooltip = {title: 'Hello Tooltip<br />This is a multiline message!'};\n  $scope.popover = {title: 'Title', content: 'Hello Popover<br />This is a multiline message!'};\n  $scope.aside = {title: 'Title', content: 'Hello Aside<br />This is a multiline message!'};\n  $scope.modal = {title: 'Title', content: 'Hello Modal<br />This is a multiline message!'};\n  $scope.panels = [\n    {title:'Collapsible Group Item #1', body: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch.'},\n    {title:'Collapsible Group Item #2', body: 'Food truck fixie locavore, accusamus mcsweeney\\'s marfa nulla single-origin coffee squid. Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee.'},\n    {title:'Collapsible Group Item #3', body: 'Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney\\'s organic lomo retro fanny pack lo-fi farm-to-table readymade.'}\n  ];\n\n});\n\n// Source: scripts/directives/append-source.js\nangular.module('mgcrea.ngMotionDocs')\n\n  .directive('appendSource', function($window, $compile, indent) {\n\n    return {\n      compile: function(element, attr) {\n\n        // Directive options\n        var options = {placement: 'after'};\n        angular.forEach(['placement', 'hlClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var hlElement = angular.element('<div class=\"highlight\" ng-non-bindable><pre><code class=\"html\" style=\"margin:0\"></code></pre></div>');\n        var codeElement = hlElement.children('pre').children('code');\n        var elementHtml = indent(element.html());\n        codeElement.text(elementHtml);\n        if(options.hlClass) codeElement.addClass(options.hlClass);\n        element[options.placement](hlElement);\n        $window.hljs.highlightBlock(codeElement[0]);\n\n      }\n    };\n\n  });\n\n// Source: scripts/directives/code.js\nangular.module('mgcrea.ngMotionDocs')\n\n  .directive('code', function() {\n\n    return {\n      restrict: 'E',\n      terminal: true\n    };\n\n  });\n\n// Source: scripts/directives/highlight-block.js\nangular.module('mgcrea.ngMotionDocs')\n\n  .directive('highlightBlock', function($window, indent) {\n\n    return {\n      compile: function(element, attr) {\n        element.html(indent(element.html()));\n        return function postLink(scope, element, attr) {\n          $window.hljs.highlightBlock(element[0]);\n        };\n      }\n    };\n\n  });\n\n})(window, document);\n","'use strict';\n\nangular.module('mgcrea.ngMotionDocs', [\n  'mgcrea.ngStrap',\n  'mgcrea.ngPlunkr',\n  'ngRoute',\n  'ngAnimate'\n])\n\n.constant('version', 'v0.4.1')\n\n.config(function($plunkrProvider, version) {\n\n  angular.extend($plunkrProvider.defaults, {\n    plunkrTitle: 'AngularMotion Example Plunkr',\n    plunkrTags: ['angular', 'angular-motion', 'angular-strap'],\n    plunkrPrivate: false,\n    contentHtmlUrlPrefix: 'https://rawgithub.com/mgcrea/angular-strap/' + version + '/src/',\n    contentJsUrlPrefix: 'https://rawgithub.com/mgcrea/angular-strap/' + version + '/src/'\n  });\n\n})\n\n.config(function($routeProvider, $compileProvider, $locationProvider, $sceProvider) {\n\n  // Configure html5 to get links working on jsfiddle\n  $locationProvider.html5Mode(false);\n\n  // Disable strict context\n  $sceProvider.enabled(false);\n\n  // Disable scope debug data\n  $compileProvider.debugInfoEnabled(false);\n\n})\n\n.config(function($popoverProvider, $tooltipProvider, $asideProvider, $modalProvider) {\n\n  angular.extend($popoverProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n  angular.extend($tooltipProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n  angular.extend($modalProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n  angular.extend($asideProvider.defaults, {\n    container: 'body',\n    html: true\n  });\n\n})\n\n.run(function($window, $rootScope, $location, $anchorScroll, version) {\n\n  $rootScope.version = version;\n\n  // FastClick\n  $window.FastClick.attach($window.document.body);\n\n  // Support simple anchor id scrolling\n  var bodyElement = angular.element($window.document.body);\n  bodyElement.on('click', function(evt) {\n    var el = angular.element(evt.target);\n    var hash = el.attr('href');\n    if(!hash || hash[0] !== '#') return;\n    if(hash.length > 1 && hash[1] === '/') return;\n    if(evt.which !== 1) return;\n    $location.hash(hash.substr(1));\n    $anchorScroll();\n  });\n\n  // Initial $anchorScroll()\n  setTimeout(function() {\n    $anchorScroll();\n  }, 0);\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngPlunkr', ['mgcrea.ngStrap.helpers.debounce'])\n\n.run(function($templateCache, version) {\n\n  var ngVersion = '1.3.8';\n\n  var templateHtml = '' +\n    '<!DOCTYPE html>\\n' +\n    '<html ng-app=\"{{ moduleName }}\">\\n' +\n    '\\n' +\n    '  <head>\\n' +\n    '    <meta charset=\"utf-8\" />\\n' +\n    '    <title>AngularJS Plunker</title>\\n' +\n    '    <script>document.write(\\'<base href=\"\\' + document.location + \\'\" />\\');</script>\\n' +\n    '    <link rel=\"stylesheet\" href=\"style.css\" />\\n' +\n\n    '    <link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/static/styles/angular-motion.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/static/styles/bootstrap-additions.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/styles/libraries.min.css\">\\n' +\n    '    <link rel=\"stylesheet\" href=\"//mgcrea.github.io/angular-strap/styles/main.min.css\">\\n' +\n\n    '    <script src=\"//code.angularjs.org/' + ngVersion + '/angular.min.js\" data-semver=\"' + ngVersion + '\"></script>\\n' +\n    '    <script src=\"//code.angularjs.org/' + ngVersion + '/angular-animate.min.js\" data-semver=\"' + ngVersion + '\"></script>\\n' +\n    '    <script src=\"//code.angularjs.org/' + ngVersion + '/angular-sanitize.min.js\" data-semver=\"' + ngVersion + '\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/dist/angular-strap.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/dist/angular-strap.tpl.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '    <script src=\"app.js\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/scripts/docs.tpl.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '    <script src=\"//mgcrea.github.io/angular-strap/scripts/demo.tpl.js\" data-semver=\"' + version + '\"></script>\\n' +\n    '  </head>\\n' +\n    '\\n' +\n    '  <body ng-controller=\"MainCtrl\">\\n' +\n    '\\n{{ contentHtml }}\\n' +\n    '  </body>\\n' +\n    '\\n' +\n    '</html>\\n';\n\n  $templateCache.put('$plunkr-html', templateHtml);\n\n  var templateCss = '' +\n    '/* Put your css in here */\\n' +\n    '\\n{{ contentCss }}\\n';\n\n  $templateCache.put('$plunkr-css', templateCss);\n\n  var templateJs = '' +\n    'var app = angular.module(\\'{{ moduleName }}\\', [\\'ngAnimate\\', \\'ngSanitize\\', \\'mgcrea.ngStrap\\']);\\n' +\n    '\\n' +\n    'app.controller(\\'MainCtrl\\', function($scope) {\\n' +\n    '});\\n' +\n    '\\n{{ contentJs }}\\n';\n\n  $templateCache.put('$plunkr-js', templateJs);\n\n})\n\n.provider('$form', function() {\n\n  var defaults = {};\n\n  this.$get = function($window) {\n\n    var bodyEl = angular.element($window.document.body);\n\n    var $form = {};\n\n    $form.post = function(url, fields) {\n      var form = angular.element('<form style=\"display: none;\" method=\"post\" action=\"' + url + '\" target=\"_blank\"></form>');\n      angular.forEach(fields, function(value, name) {\n        var input = angular.element('<input type=\"hidden\" name=\"' +  name + '\">');\n        input.attr('value', value);\n        form.append(input);\n      });\n      bodyEl.append(form);\n      form[0].submit();\n      form.remove();\n    };\n\n    return $form;\n\n  };\n\n})\n\n.provider('$plunkr', function() {\n\n  var defaults = this.defaults = {\n    preload: false,\n    plunkrTitle: 'AngularJS Example Plunkr',\n    plunkrPrivate: true,\n    plunkrTags: ['angular'],\n    moduleName: 'plunker',\n    templateHtml: '$plunkr-html',\n    contentHtml: '    <p>Hello {{name}}!</p>\\n',\n    contentHtmlUrl: '',\n    templateCss: '$plunkr-css',\n    contentCss: 'body {\\n  padding: 40px !important;\\n}\\n',\n    contentCssUrl: '',\n    templateJs: '$plunkr-js',\n    contentJs: '  $scope.name = \\'World\\';\\n',\n    contentJsUrl: ''\n  };\n\n  this.$get = function($rootScope, $compile, $templateCache, $q, $http, $form) {\n\n    function PlunkrFactory(config) {\n\n      var $plunkr = {};\n\n      // Common vars\n      var options = angular.extend({}, defaults, config);\n      var scope = $plunkr.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n      $plunkr.$isReady = false;\n\n      // Private vars\n\n      var deferred = $q.defer();\n      $plunkr.$promise = deferred.promise;\n      var postData = {};\n\n      $plunkr.init = function() {\n\n        postData.description = options.plunkrTitle;\n        angular.forEach(options.plunkrTags, function(tag, index) {\n          postData['tags[' + index + ']'] = tag;\n        });\n        postData.private = options.plunkrPrivate;\n        if(options.preload) {\n          $plunkr.load();\n        }\n\n      };\n\n      $plunkr.load = function() {\n        deferred.resolve($q.all(['templateHtml', 'contentHtmlUrl', 'templateCss', 'contentCssUrl', 'templateJs', 'contentJsUrl'].map(function(key) {\n          var template = options[key + 'Prefix'] ? options[key + 'Prefix'] + options[key] : options[key];\n          return options[key] && $q.when($templateCache.get(template) || $http.get(template));\n        })).then(function(results) {\n          return results.map(function(result) {\n            if(angular.isString(result)) return result;\n            else if(angular.isArray(result)) return result[1];\n            else if(angular.isObject(result)) return result.data;\n            else return result;\n          });\n        }).then(function(results) {\n          postData['files[index.html]'] = results[0].replace(/{{ contentHtml }}/i, results[1] || options.contentHtml).replace(/{{ moduleName }}/i, options.moduleName);\n          postData['files[style.css]'] = results[2].replace(/{{ contentCss }}/i, results[3] || options.contentCss).replace(/{{ moduleName }}/i, options.moduleName);\n          postData['files[app.js]'] = results[4].replace(/{{ contentJs }}/i, results[5] || options.contentJs).replace(/{{ moduleName }}/i, options.moduleName);\n          $plunkr.$isReady = true;\n        }));\n        return $plunkr.$promise;\n      };\n\n      $plunkr.open = function(load) {\n        if(!$plunkr.$isReady) $plunkr.load();\n        else $form.post('http://plnkr.co/edit/?p=preview', postData);\n      };\n\n      $plunkr.init();\n      return $plunkr;\n\n    }\n\n    return PlunkrFactory;\n\n  };\n\n})\n\n.directive('ngPlunkr', function($plunkr, debounce) {\n\n  return {\n    restrict: 'EAC',\n    scope: true,\n    // priority: 10000,\n    template: '<i class=\"fa fa-edit\"></i><small>plunker</small>',\n    compile: function(tElement, tAttr) {\n\n      // tElement.attr('data-title', 'edit in plunker');\n      // tElement.attr('data-placement', 'right');\n      // tElement.attr('bs-tooltip', '');\n\n      tAttr.$set('title', 'edit in plunker');\n\n      return function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['moduleName', 'templateHtml', 'templateJs', 'templateCss', 'contentHtmlUrl', 'contentJsUrl', 'contentCssUrl'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Initialize plnkr\n        var plunkr = $plunkr(options);\n\n        var previousTitle = attr.title;\n        function onClickHandler() {\n          if(!plunkr.$isReady) {\n            attr.$set('title', '<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;preparing plunker...');\n            plunkr.load();\n          } else {\n            plunkr.open();\n          }\n        }\n\n        function plunkerIsReady() {\n          scope.$apply(function() {\n            attr.$set('title', '<i class=\"fa fa-check\"></i>&nbsp;punker ready, click again!');\n          });\n        }\n\n        plunkr.$promise.then(debounce(plunkerIsReady, 400));\n\n        // Trigger\n        element.on('click', onClickHandler);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          attr.$set('title', previousTitle);\n          element.off('click', onClickHandler);\n          plunkr.destroy();\n          options = null;\n          plunkr = null;\n        });\n\n      };\n    }\n  };\n});\n\n\n/*\nfunction(templateMerge, formPostData, prepareEditorAssetTags, prepareDefaultAppModule) {\n  return function(content) {\n    var hasRouting = false;\n    angular.forEach(content.deps, function(file) {\n      hasRouting = hasRouting || file.name == 'angular-route.js';\n    });\n    var indexHtmlContent = '<!doctype html>\\n' +\n                           '<html ng-app=\"{{module}}\">\\n' +\n                           '  <head>\\n' +\n                           '{{scriptDeps}}';\n\n    if(hasRouting) {\n        indexHtmlContent += '<script type=\"text/javascript\">\\n' +\n                            '//this is here to make plunkr work with AngularJS routing\\n' +\n                            'angular.element(document.getElementsByTagName(\\'head\\')).append(' +\n                              'angular.element(\\'<base href=\"\\' + window.location.pathname + \\'\" />\\')' +\n                            ');\\n' +\n                            '</script>\\n';\n    }\n\n    indexHtmlContent += '</head>\\n' +\n                        '  <body>\\n\\n' +\n                        '{{indexContents}}\\n\\n' +\n                        '  </body>\\n' +\n                        '</html>\\n';\n\n    indexProp = {\n      module: content.module,\n      scriptDeps: prepareEditorAssetTags(content, { includeLocalFiles : true }),\n      indexContents: content.html[0].content\n    };\n\n    var allFiles = [].concat(content.js, content.css, content.html, content.json);\n\n    if(!content.module) {\n      var moduleData = prepareDefaultAppModule(content);\n      indexProp.module = moduleData.module;\n\n      var found = false;\n      angular.forEach(content.js, function(file) {\n        if(file.name == 'script.js') {\n          file.content = moduleData.script + file.content;\n          found = true;\n        }\n      });\n      if(!found) {\n        indexProp.scriptDeps += '<script type=\"text/javascript\" src=\"script.js\"></script>\\n';\n        allFiles.push({\n          name : 'script.js',\n          content : moduleData.script\n        });\n      }\n    };\n\n    var postData = {};\n\n    angular.forEach(allFiles, function(file, index) {\n      if (file.content && file.name != 'index.html') {\n        postData['files[' + file.name + ']'] = file.content;\n      }\n    });\n\n    postData['files[index.html]'] = templateMerge(indexHtmlContent, indexProp);\n    postData['tags[]'] = \"angularjs\";\n\n    postData.private = true;\n    postData.description = 'AngularJS Example Plunkr';\n\n    formPostData('http://plnkr.co/edit/?p=preview', postData);\n  };\n};*/\n","'use strict';\n\nangular.module('mgcrea.ngMotionDocs')\n\n.value('indent', function(text, spaces) {\n\n  if(!text) return text;\n  var lines = text.split(/\\r?\\n/);\n  var prefix = '      '.substr(0, spaces || 0);\n  var i;\n\n  // Remove any leading blank lines\n  while(lines.length && lines[0].match(/^\\s*$/)) lines.shift();\n  // Remove any trailing blank lines\n  while(lines.length && lines[lines.length - 1].match(/^\\s*$/)) lines.pop();\n  // Calculate proper indent\n  var minIndent = 999;\n  for(i = 0; i < lines.length; i++) {\n    var line = lines[0];\n    var indent = line.match(/^\\s*/)[0];\n    if(indent !== line && indent.length < minIndent) {\n      minIndent = indent.length;\n    }\n  }\n\n  for(i = 0; i < lines.length; i++) {\n    lines[i] = prefix + lines[i].substring(minIndent).replace(/=\"\"/g, '');\n  }\n  lines.push('');\n  return lines.join('\\n');\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngMotionDocs')\n\n.controller('MainCtrl', function ($scope, $rootScope, $location, $anchorScroll, $plunkr) {\n\n  $scope.$scrollTo = function(hash) {\n    $location.hash(hash);\n    $anchorScroll();\n  };\n\n  $scope.createPlunkr = function() {\n    var myPlunkr = $plunkr();\n  };\n\n  $scope.tooltip = {title: 'Hello Tooltip<br />This is a multiline message!'};\n  $scope.popover = {title: 'Title', content: 'Hello Popover<br />This is a multiline message!'};\n  $scope.aside = {title: 'Title', content: 'Hello Aside<br />This is a multiline message!'};\n  $scope.modal = {title: 'Title', content: 'Hello Modal<br />This is a multiline message!'};\n  $scope.panels = [\n    {title:'Collapsible Group Item #1', body: 'Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch.'},\n    {title:'Collapsible Group Item #2', body: 'Food truck fixie locavore, accusamus mcsweeney\\'s marfa nulla single-origin coffee squid. Exercitation +1 labore velit, blog sartorial PBR leggings next level wes anderson artisan four loko farm-to-table craft beer twee.'},\n    {title:'Collapsible Group Item #3', body: 'Etsy mixtape wayfarers, ethical wes anderson tofu before they sold out mcsweeney\\'s organic lomo retro fanny pack lo-fi farm-to-table readymade.'}\n  ];\n\n});\n","'use strict';\n\nangular.module('mgcrea.ngMotionDocs')\n\n  .directive('appendSource', function($window, $compile, indent) {\n\n    return {\n      compile: function(element, attr) {\n\n        // Directive options\n        var options = {placement: 'after'};\n        angular.forEach(['placement', 'hlClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var hlElement = angular.element('<div class=\"highlight\" ng-non-bindable><pre><code class=\"html\" style=\"margin:0\"></code></pre></div>');\n        var codeElement = hlElement.children('pre').children('code');\n        var elementHtml = indent(element.html());\n        codeElement.text(elementHtml);\n        if(options.hlClass) codeElement.addClass(options.hlClass);\n        element[options.placement](hlElement);\n        $window.hljs.highlightBlock(codeElement[0]);\n\n      }\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngMotionDocs')\n\n  .directive('code', function() {\n\n    return {\n      restrict: 'E',\n      terminal: true\n    };\n\n  });\n","'use strict';\n\nangular.module('mgcrea.ngMotionDocs')\n\n  .directive('highlightBlock', function($window, indent) {\n\n    return {\n      compile: function(element, attr) {\n        element.html(indent(element.html()));\n        return function postLink(scope, element, attr) {\n          $window.hljs.highlightBlock(element[0]);\n        };\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}